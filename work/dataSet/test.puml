@startuml AiNiee_UI_ClassDiagram_Enhanced
skinparam classAttributeIconSize 0
skinparam packageStyle rectangle
skinparam shadowing false
skinparam dpi 150
hide empty members
left to right direction

' =====================
' 基础层
' =====================
package "Base Layer" {
    class Base {
        - id : int
        - name : string
        - enabled : bool
        + loadConfig(path : string) : void
        + saveConfig(path : string) : void
    }

    class QObject
    class QWidget {
        - width : int
        - height : int
        + show() : void
        + hide() : void
    }

    class QFrame
    class FluentWindow {
        - title : string
        + setTitle(text : string) : void
        + showWindow() : void
    }

    class QThread {
        + start() : void
        + terminate() : void
    }
}
Base --|> QObject

' =====================
' 公共组件层
' =====================
package "Common Widgets" {
    class CardWidget {
        - title : string
        + setTitle(text : string) : void
        + refresh() : void
    }

    class MessageBoxBase {
        - message : string
        + exec() : int
        + setMessage(text : string) : void
    }

    class DropDownPushButton {
        - options : list<string>
        + showMenu() : void
        + onOptionSelected(index : int) : void
    }
}
CardWidget --|> QWidget
MessageBoxBase --|> QWidget
DropDownPushButton --|> QWidget

' =====================
' 用户界面层（UI）
' =====================
package "User Interface" {
    class AppFluentWindow {
        - appName : string
        - version : string
        + initUI() : void
        + showAboutDialog() : void
    }

    class PromptCard <<prompt>> {
        - promptText : string
        + setPromptText(text : string) : void
        + generatePreview() : string
    }

    class AddEditPromptDialog {
        - prompt : string
        + setPrompt(text : string) : void
        + execDialog() : int
    }

    class UpdateMessageBox {
        - currentVersion : string
        - newVersion : string
        + showUpdateInfo() : void
    }

    class AppSettingsPage {
        - settings : dict
        + loadSettings() : void
        + saveSettings() : void
    }

    class NavigationCard {
        - iconPath : string
        + setIcon(path : string) : void
        + onClicked() : void
    }

    class PageCard {
        - header : string
        + setHeader(text : string) : void
        + addWidget(widget : QWidget) : void
    }

    class BottomCommandBar {
        - commands : list<string>
        + addCommand(cmd : string) : void
        + clearCommands() : void
    }
}

AppFluentWindow --|> FluentWindow
AppFluentWindow --|> Base
PromptCard --|> Base
PromptCard --|> CardWidget
AddEditPromptDialog --|> MessageBoxBase
AddEditPromptDialog --|> Base
UpdateMessageBox --|> MessageBoxBase
AppSettingsPage --|> QWidget
AppSettingsPage --|> Base
NavigationCard --|> CardWidget
PageCard --|> CardWidget
BottomCommandBar --|> CardWidget

' =====================
' Widget 层
' =====================
package "Widgets" {
    class SliderCard {
        - value : int
        - minValue : int
        - maxValue : int
        + setRange(min : int, max : int) : void
        + setValue(v : int) : void
    }

    class SwitchButtonCard {
        - checked : bool
        + toggle() : void
        + setChecked(state : bool) : void
    }

    class PushButtonCard {
        - text : string
        + onClick() : void
        + setText(t : string) : void
    }

    class LineEditCard {
        - text : string
        + setText(t : string) : void
        + getText() : string
    }

    class ComboBoxCard {
        - items : list<string>
        + addItem(item : string) : void
        + currentText() : string
    }

    class FlowCard {
        + layoutWidgets() : void
        + clear() : void
    }

    class DashboardCard {
        - stats : dict
        + updateData(stats : dict) : void
        + render() : void
    }
}

SliderCard --|> CardWidget
SwitchButtonCard --|> CardWidget
PushButtonCard --|> CardWidget
LineEditCard --|> CardWidget
ComboBoxCard --|> CardWidget
FlowCard --|> CardWidget
DashboardCard --|> CardWidget

' =====================
' 插件基础层
' =====================
package "Plugin Base" {
    class PluginBase {
        - name : string
        - priority : int
        + onLoad() : void
        + onUnload() : void
    }

    class BaseTranslationWriter {
        - outputPath : string
        + write(text : string) : void
    }

    class BaseSourceReader {
        - sourcePath : string
        + read() : string
    }
}
PluginBase --|> Base
BaseTranslationWriter --|> Base
BaseSourceReader --|> Base

' =====================
' 插件层
' =====================
package "Plugins" {
    class TranslationCheckPlugin {
        + runCheck(text : string) : list<string>
    }

    class TextNormalizer {
        + normalize(text : string) : string
    }

    class BilingualPlugin {
        + translate(text : string, lang : string) : string
    }

    class CustomWriter {
        + writeCustomFormat(text : string) : void
    }

    class CustomReader {
        + readCustomFormat() : string
    }
}

TranslationCheckPlugin --|> PluginBase
TextNormalizer --|> PluginBase
BilingualPlugin --|> PluginBase
CustomWriter --|> BaseTranslationWriter
CustomReader --|> BaseSourceReader

@enduml

